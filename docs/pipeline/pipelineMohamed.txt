name: Spring Boot CI/CD Pipeline
 
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
 
jobs:
  build:
    name: Build and Test Spring Boot App
    runs-on: ubuntu-latest
 
    steps:
      # Étape 1: Vérification du code source
      - name: Checkout code
        uses: actions/checkout@v3
 
      # Étape 2: Configuration de Java
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
 
      # Étape 3: Installation des dépendances
      - name: Install dependencies
        run: ./mvnw dependency:resolve
 
      # Étape 4: Compilation du projet
      - name: Build the project
        run: ./mvnw clean install
 
      # Étape 5: Exécution des tests unitaires
      - name: Run tests
        run: ./mvnw test
 
  docker:
    name: Build and Push Docker Image
    needs: build
    runs-on: ubuntu-latest
 
    steps:
      # Étape 1: Vérification du code source
      - name: Checkout code
        uses: actions/checkout@v3
 
      # Étape 2: Connexion à DockerHub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
 
      # Étape 3: Construction de l'image Docker
      - name: Build Docker Image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/spring-app:${{ github.sha }} .
      # Étape 4: Push de l'image vers DockerHub
      - name: Push Docker Image
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/spring-app:${{ github.sha }}
 
  deploy:
    name: Deploy Application
    needs: docker
    runs-on: ubuntu-latest
 
    steps:
      # Étape 1: Déploiement avec SSH (exemple vers un serveur distant)
      - name: Deploy to Server
        uses: appleboy/ssh-action@v0.1.9
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          password: ${{ secrets.SERVER_PASSWORD }}
          port: 22
          script: |
            docker pull ${{ secrets.DOCKER_USERNAME }}/spring-app:${{ github.sha }}
            docker stop spring-app || true
            docker rm spring-app || true
            docker run -d --name spring-app -p 8080:8080 ${{ secrets.DOCKER_USERNAME }}/spring-app:${{ github.sha }}