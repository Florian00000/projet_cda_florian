volumes:
  docker_mysqldata:
  uploaded_images:
  mongo_data:
  mongo_config:
networks:
  id_training:

services:
  mysql:
    image: mysql@sha256:b842a59bfaf81ea435b65be7e041c280416df8d295457f64c7c1445484464123
    container_name: docker_mysql
    restart: always
    ports:
      - "3307:3306"
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: projet_cda_db      
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    volumes:
      - docker_mysqldata:/var/lib/mysql
      - ./sql/data.sql:/docker-entrypoint-initdb.d/data.sql
    networks:
      - id_training
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 5s
      retries: 10

  phpmyadmin:
    image: phpmyadmin
    container_name: phpmyadmin_container
    depends_on:
      mysql:
        condition: service_healthy
    ports:
      - "8033:80"
    environment:
      PMA_HOST: docker_mysql
    networks:
      - id_training

  mongo:
    image: mongo@sha256:aaad67f2dca93148e5343c03210bcfc89a0107516a4756bfa018acd6579e5b18
    container_name: mongo_container
    restart: always
    ports:
      - "27018:27017"  
    environment:
      - MONGO_INITDB_ROOT_USERNAME=mongoadmin
      - MONGO_INITDB_ROOT_PASSWORD=mongoadmin
    volumes:
      - mongo_data:/data/db
      - mongo_config:/data/configdb
    networks:
      - id_training
    healthcheck:
      #test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      test: ["CMD", "mongosh", "-u", "mongoadmin", "-p", "mongoadmin", "--authenticationDatabase", "admin", "--eval", "db.adminCommand('ping')"]
      interval: 30s
      retries: 3
  
  back_it_training:
    container_name: back_it_training_container
    depends_on:
      mysql:
        condition: service_healthy
      mongo:
        condition: service_healthy
    image: ${DOCKER_USERNAME}/back_it_training
    build:
      context: ./backend/IT_Training_back
      dockerfile: dockerfile
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://docker_mysql/projet_cda_db
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      SPRING_WEB_RESOURCES_STATIC-LOCATION: /app/public/images/,classpath:/public/
      JWT_SECRET: ${JWT_SECRET}
      SPRING_DATA_MONGODB_URI: mongodb://mongoadmin:mongoadmin@mongo_container:27017/?authSource=admin
      #SPRING_DATA_MONGODB_URI: mongodb://mongo_container:27017/
      #SPRING_DATA_MONGODB_DATABASE: projet_cda_it_training
    volumes:
      - uploaded_images:/app/public/images
    ports:
      - "8080:8080"
    networks:
      - id_training

  front_it_training:
    depends_on:
      - back_it_training
    container_name: front_it_training_container
    image: ${DOCKER_USERNAME}/front_it_training
    build:
      context: ./frontend/IT_Training_front
      dockerfile: dockerfile
    ports:
      - "80:80"
    networks:
      - id_training